{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/PageNotFound.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","slug","sex","to","classNames","PeopleTable","people","personSlug","map","born","died","fatherName","motherName","motherChecked","fatherChecked","mother","find","human","father","isSelectedLink","PeoplePage","useParams","useState","setPeople","isReceiving","setIsReceiving","isReceivedData","setIsReceivedData","isError","setIsError","useEffect","receivedPeople","catch","finally","peopleReceived","length","emptyPeoplyList","PageNotFound","PageNavLink","text","isActive","NavBar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.452473c1.chunk.js","sourcesContent":["export const HomePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype PropTypes = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<PropTypes> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <td>\n      <NavLink\n        to={`../${slug}`}\n        className={classNames({\n          'has-text-danger': sex === 'f',\n        })}\n      >\n        {name}\n      </NavLink>\n    </td>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype PropTypes = {\n  people: Person[];\n  personSlug: string;\n};\n\nexport const PeopleTable: React.FC<PropTypes> = ({ people, personSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          } = person;\n\n          const motherChecked = motherName || '-';\n          const fatherChecked = fatherName || '-';\n          const mother = people.find(human => human.name === motherName);\n          const father = people.find(human => human.name === fatherName);\n          const isSelectedLink = slug === personSlug;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': isSelectedLink,\n              })}\n            >\n              <PersonLink person={person} />\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {!mother ? motherChecked : <PersonLink person={mother} />}\n              </td>\n              <td>\n                {!father ? fatherChecked : <PersonLink person={father} />}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const { personSlug = '' } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isReceiving, setIsReceiving] = useState<boolean>(false);\n  const [isReceivedData, setIsReceivedData] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsReceiving(true);\n    getPeople()\n      .then(receivedPeople => {\n        setPeople(receivedPeople);\n        setIsReceivedData(true);\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsReceiving(false);\n      });\n  }, []);\n\n  const peopleReceived = isReceivedData && people.length;\n  const emptyPeoplyList = isReceivedData && !people.length;\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"box table-container\">\n\n        {isReceiving && <Loader />}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {emptyPeoplyList && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {peopleReceived && (\n          <PeopleTable\n            people={people}\n            personSlug={personSlug}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype PropTypes = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<PropTypes> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}